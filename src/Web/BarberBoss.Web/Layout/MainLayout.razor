@inherits LayoutComponentBase

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<AuthorizeView>
    <div class="page">
        <div class="min-h-screen bg-[#252525] py-1 md:min-w-[13.75rem]">
            <div class="flex h-14 justify-center border-b-neutral-50 bg-[#252525]">
                <img src="barber-boss-logo.png" height="50" width="50"/>
            </div>                   
        </div>

        <main>            
            <div class="flex h-14 w-full bg-[#252525]">
                <header class="relative flex h-full w-full items-center justify-end py-2 pr-20">
                    <div class="h-10 w-10 rounded-full bg-[#3b82f6]" @onclick="ShowProfileDropDown">
                        <div class="flex h-full w-full cursor-pointer items-center justify-center">
                            <span class="font-bold text-neutral-50">@context.User!.Claims.FirstOrDefault(claim => claim.Type == "unique_name")!.Value.Substring(0, 1)</span>
                        </div>
                        <div class="@(_isProfileDropdownOpen ? "" : "hidden") bg-neutral-500/15 absolute right-px mt-2.5 h-[12rem] w-[15.625rem] rounded-md px-4 py-3">
                            <div class="flex w-full cursor-pointer items-center justify-start gap-2" @onclick="GoToProfile">
                                <div class="flex h-8 w-8 items-center justify-center rounded-full bg-[#3b82f6]">
                                    <span class="font-medium text-neutral-50">@context.User!.Claims.FirstOrDefault(claim => claim.Type == "unique_name")!.Value.Substring(0, 1)</span>
                                </div>
                                <div class="flex w-auto flex-col">
                                    <span class="text-base">@context.User!.Claims.FirstOrDefault(claim => claim.Type == "unique_name")!.Value</span>
                                    <span class="text-xs">@context.User!.Claims.FirstOrDefault(claim => claim.Type == "email")!.Value</span>
                                </div>                                
                            </div>
                            <ul class="flex w-full flex-col">
                                <li></li>
                            </ul>
                        </div>
                    </div>
                    
                </header>
            </div>

            <article class="content px-4">
                @Body
            </article>
        </main>
    </div>
</AuthorizeView>


@code {
    private bool _isProfileDropdownOpen;
    private ClaimsPrincipal _user = default!;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        _user = authState.User;

        if (!_user.Identity!.IsAuthenticated)
        {
            NavigationManager.NavigateTo("/");
        }
    }

    private void ShowProfileDropDown() => _isProfileDropdownOpen = !_isProfileDropdownOpen;

    private void GoToProfile()
    {
        var userType = _user.Claims.FirstOrDefault(claim => claim.Type == "role")!.Value;     
        
        if (userType is not null && Enum.TryParse<UserType>(userType, out var userRole))
        {
            if (userRole == UserType.BarberShop)
                NavigationManager.NavigateTo("/barbearia/perfil");
            else if (userRole == UserType.Customer)
                NavigationManager.NavigateTo("/auth/entrar");
            else
                NavigationManager.NavigateTo("/auth/entrar");
        }
    }
}
